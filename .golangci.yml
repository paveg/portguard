# golangci-lint v2 Configuration
# AI-aware process management tool - Portguard
# Comprehensive linting with latest best practices

version: "2"

run:
  timeout: 5m
  issues-exit-code: 1
  tests: true
  go: '1.24'

output:
  formats:
    text:
      path: stdout
      colors: true

linters:
  default: none
  
  enable:
    # Bugs detection
    - errcheck        # Check for unchecked errors
    - gosec          # Security vulnerabilities
    - govet          # Standard Go vet checks
    - staticcheck    # Comprehensive static analysis (includes gosimple, stylecheck)
    - bodyclose      # HTTP response body close checks
    - contextcheck   # Context usage checks
    - errorlint      # Error wrapping checks
    - exhaustive     # Enum exhaustiveness
    - makezero       # Slice initialization checks
    - nilerr         # Nil error checks
    - nilnesserr     # Nil/error return checks
    - noctx          # HTTP request without context checks
    - rowserrcheck   # SQL row error checks
    - sqlclosecheck  # SQL connection close checks
    - testifylint    # Testify usage checks
    
    # Code style and quality
    - misspell       # Spelling mistakes
    - revive         # Golint replacement with more rules
    - gocritic       # Comprehensive checks collection
    - unconvert      # Unnecessary type conversions
    - unparam        # Unused function parameters
    - unused         # Unused code detection
    - wastedassign   # Wasted assignments
    - whitespace     # Whitespace issues
    
    # Complexity and maintainability (relaxed for CI)
    - cyclop         # Cyclomatic complexity
    - gocognit       # Cognitive complexity
    - gocyclo        # Cyclomatic complexity
    - nestif         # Deeply nested if statements
    
    # Performance
    - prealloc       # Slice preallocation
    - perfsprint     # Performance sprintf checks
    
    # Code consistency
    - goconst        # Repeated strings that could be constants
    - gomoddirectives # Go.mod directive checks
    - mnd            # Magic numbers detection
    - varnamelen     # Variable name length checks
    - ireturn        # Interface return checks
    - interfacebloat # Large interface checks
    
    # Testing
    - tparallel      # Parallel test checks
    # - testpackage    # Test package naming (disabled - would require major refactoring)
    - thelper        # Test helper functions
    
    # Import management
    - depguard       # Dependency management
    - importas       # Import aliasing consistency

  settings:
    errcheck:
      check-type-assertions: true
      check-blank: true
      exclude-functions:
        - io.Copy(*bytes.Buffer)
        - fmt.Print*
        - fmt.Fprint*
        - (*os.File).Close

    gosec:
      excludes:
        - G104  # Errors unhandled (allow for specific cases with nolint)
        - G204  # Subprocess launched with variable
        - G301  # File permissions (relaxed for CLI apps)
        - G302  # File permissions  
        - G304  # File inclusion via variable (common in CLI apps)
        - G306  # Write permissions

    govet:
      enable-all: true
      disable:
        - fieldalignment  # Struct field alignment (can be noisy)

    staticcheck:
      checks:
        - all
        - '-SA1019'  # Disable deprecated package usage (allow for backward compatibility)

    gocritic:
      enabled-tags:
        - style
        - performance  
        - diagnostic
      disabled-checks:
        - unnamedResult  # Allow unnamed results for simple functions

    cyclop:
      max-complexity: 20
      package-average: 10.0

    gocognit:
      min-complexity: 40

    funlen:
      lines: 80
      statements: 40
      ignore-comments: true

    nestif:
      min-complexity: 4

    mnd:
      ignored-numbers:
        - '0'
        - '1' 
        - '2'
        - '3'
        - '8'  # Common for octal permissions
        - '16'
        - '32'
        - '64'
        - '100'
        - '200'
        - '404'
        - '500'
        - '1000'
        - '1024'
        - '3000'  # Common port range start
        - '8000'
        - '8080'
        - '9000'  # Common port range end
      ignored-functions:
        - os.Chmod
        - os.Mkdir*
        - strconv.*
        - time.*

    revive:
      rules:
        # Enable only essential rules for CI
        - name: blank-imports
        - name: context-as-argument
        - name: empty-block
        - name: error-naming
        - name: error-return
        - name: error-strings
        - name: unreachable-code
        - name: var-declaration

    varnamelen:
      min-name-length: 2
      ignore-names:
        - err
        - id
        - ip
        - db
        - tx
        - ok
        - i
        - j
        - k
        - v

    wrapcheck:
      ignore-sigs:
        - .Errorf(
        - errors.New(
        - errors.Unwrap( 
        - errors.Join(
        - .Wrap(
        - .Wrapf(

    ireturn:
      allow:
        - anon
        - error
        - empty
        - stdlib
        - "generic"

    depguard:
      rules:
        main:
          files:
            - "!**/*_test.go"
          allow:
            - $gostd
            - github.com/spf13/cobra
            - github.com/spf13/viper
            - github.com/paveg/portguard
          deny:
            - pkg: "reflect"
              desc: "avoid reflection for performance"
        test:
          files:
            - "**/*_test.go"
          allow:
            - $gostd
            - github.com/stretchr/testify
            - github.com/spf13/viper  # Allow viper in tests for config testing
            - github.com/paveg/portguard

    testifylint:
      enable-all: true
      disable:
        - suite-dont-use-pkg  # Allow testify/suite usage

  exclusions:
    generated: strict
    
    paths:
      - ".*\\.pb\\.go$"         # Protocol buffer generated files
      - ".*\\.gen\\.go$"        # Generated files
      - "vendor/"               # Vendor directory
    
    rules:
      # Allow longer functions in test files
      - path: '(.+)_test\.go'
        linters:
          - funlen
          - gocyclo
          - cyclop
          - gocognit
          - maintidx

      # Allow magic numbers in test files
      - path: '(.+)_test\.go'
        linters:
          - mnd

      # Allow dot imports in test files for testify
      - path: '(.+)_test\.go'
        text: "should not use dot imports"
        linters:
          - revive

      # Exclude cobra command files from various checks
      - path: 'internal/cmd/'
        linters:
          - unparam
          - errcheck  # CLI commands often ignore errors temporarily

      # Allow blank imports in main.go for side effects
      - path: 'cmd/portguard/main\.go'
        linters:
          - revive
        text: "blank-imports"

      # Allow magic numbers in common contexts
      - path: '(.+)\.go$'
        linters:
          - mnd
        text: "Magic number.*in <(assign|argument|operation)>"

      # Allow complex nested blocks in CLI code
      - path: 'internal/(cmd|config)/'
        linters:
          - nestif
